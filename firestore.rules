rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // By default, deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Users collection
    match /users/{userId} {
      // Anyone can create their own user document during sign up
      allow create: if request.auth.uid == userId;
      // Any authenticated user can read user profiles (for admin panel, future features)
      allow read: if request.auth != null;
      // A user can update their own document, or an admin can update any user document
      allow update: if request.auth.uid == userId || isAdmin();
    }
    
    // Quizzes collection
    match /quizzes/{quizId} {
      // Any authenticated user can read quizzes
      allow read: if request.auth != null;
      // Only admins can create, update, or delete quizzes
      allow write: if isAdmin();
    }
    
    // Documents collection
    match /documents/{documentId} {
       // Any authenticated user can read documents
      allow read: if request.auth != null;
      // Only admins can write documents
      allow write: if isAdmin();
    }

    // Training Paths collection
    match /training_paths/{pathId} {
      // Any authenticated user can read training paths
      allow read: if request.auth != null;
      // Only admins can write training paths
      allow write: if isAdmin();
    }

    // Attempts collection
    match /attempts/{attemptId} {
      // A user can only create attempts for themselves
      allow create: if request.auth.uid == request.resource.data.userId;
      // A user can only read their own attempts
      allow read: if request.auth.uid == resource.data.userId;
    }

    // Notifications collection
    match /notifications/{notificationId} {
      // Admins can create notifications for any user
      allow create: if isAdmin();
      // Users can only read or update (mark as read) their own notifications
      allow read, update: if request.auth.uid == resource.data.userId || (isAdmin() && 'isRead' in request.resource.data && request.resource.data.keys().size() == 1);
    }
  }
}
