rules_version = '2';

// Helper function to check if the user is authenticated
function isAuthenticated() {
  return request.auth != null;
}

// Helper function to check if the user is an admin
function isAdmin() {
  return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
}

// Helper function to check if the user is the owner of a document
function isOwner(userId) {
  return isAuthenticated() && request.auth.uid == userId;
}

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      // Admins can read any user profile
      // Users can read their own profile
      allow read: if isAdmin() || isOwner(userId);
      
      // Admins can update any user profile
      // Users can update their own profile
      allow update: if isAdmin() || isOwner(userId);
      
      // Only admins can create or delete users (creation happens via backend)
      allow create: if isAuthenticated(); // Allow user creation on signup
      allow delete: if isAdmin();
    }

    // Quizzes collection
    match /quizzes/{quizId} {
      // Any authenticated user can read quizzes
      allow read: if isAuthenticated();
      
      // Only admins can create, update, or delete quizzes
      allow write: if isAdmin();
    }

    // Documents collection
    match /documents/{documentId} {
      // Any authenticated user can read documents
      allow read: if isAuthenticated();
      
      // Only admins can create, update, or delete documents
      allow write: if isAdmin();
    }

    // Attempts collection
    match /attempts/{attemptId} {
      // Users can read their own attempts
      // Admins can read any attempt
      allow read: if isAdmin() || (isAuthenticated() && resource.data.userId == request.auth.uid);
      
      // Users can create their own attempts
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      
      // Nobody can update or delete attempts to preserve history
      allow update, delete: if false;
    }
  }
}
