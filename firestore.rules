
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserAdmin() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow users to read/update their own document, and admins to read/update any user document
    match /users/{userId} {
      allow read: if isUserAuthenticated() && (request.auth.uid == userId || isUserAdmin());
      allow create: if isUserAuthenticated(); // Any authenticated user can create their own user document
      allow update: if isUserAuthenticated() && (request.auth.uid == userId || isUserAdmin());
    }

    // Quizzes can be read by any authenticated user, but only managed by admins.
    match /quizzes/{quizId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isUserAdmin();
    }
    
    // Documents can be read by any authenticated user, but only managed by admins.
    match /documents/{docId} {
       allow read: if isUserAuthenticated();
       allow create, update, delete: if isUserAdmin();
    }

    // Attempts can be read by the user who made them or by an admin.
    // Users can only create attempts for themselves.
    match /attempts/{attemptId} {
      allow read: if isUserAuthenticated() && (resource.data.userId == request.auth.uid || isUserAdmin());
      allow create: if isUserAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
  }
}
