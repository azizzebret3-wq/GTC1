rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection rules
    match /users/{userId} {
      // Any authenticated user can view public user profiles
      allow read: if request.auth != null;
      // A user can create their own document or an admin can
      allow create: if request.auth.uid == userId || isAdmin();
      // A user can only update their own document, or an admin can
      allow update: if request.auth.uid == userId || isAdmin();
       // Only admins can delete users
      allow delete: if isAdmin();
    }

    // Quizzes collection rules
    match /quizzes/{quizId} {
      // Any authenticated user can read quizzes
      allow read: if request.auth != null;
      // Only admins can write (create, update, delete) quizzes
      allow write: if isAdmin();
    }

    // Documents collection rules
    match /documents/{documentId} {
       // Any authenticated user can read documents
      allow read: if request.auth != null;
       // Only admins can write (create, update, delete) documents
      allow write: if isAdmin();
    }
    
    // Attempts collection rules
    match /attempts/{attemptId} {
      // A user can only read their own attempts
      allow read: if request.auth.uid == resource.data.userId;
       // An authenticated user can create their own attempt
      allow create: if request.auth.uid == request.resource.data.userId;
       // Attempts cannot be updated or deleted by clients
      allow update, delete: if false;
    }
  }
}