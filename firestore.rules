
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can read/update their own data. Admins can read/update any user data.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      // Allow creation for any new user (handled by signup logic)
      allow create: if request.auth != null;
      // Only admins can delete users
      allow delete: if isAdmin();
    }

    // Quizzes can be read by any authenticated user. Write access is for admins only.
    match /quizzes/{quizId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }

    // Library documents can be read by authenticated users. Write access is for admins only.
    match /documents/{docId} {
       allow read: if request.auth != null;
       allow create, update, delete: if isAdmin();
    }
    
    // Users can create their own attempts, and can only read/update/delete their own attempts.
    match /attempts/{attemptId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}
